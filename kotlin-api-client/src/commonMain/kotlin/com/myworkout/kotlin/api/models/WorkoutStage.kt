/**
* Myworkout API
* Documentation for Myworkout API 2.  Basic concepts are explained in this section.  # Localization The API supports localization for error messages like validation errors. The preferred way to request language is to set proper `Accept-Language` header, but this can be overriden by adding a `lang` query parameter to the request.  - _Example 1_: `Accept-Language: no` - _Example 2_: `en-GB,en-US;q=0.9,en;q=0.8` 
*
* The version of the OpenAPI document: <%= ENV[\"API_VERSION\"] %>
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package com.myworkout.kotlin.api.models


import kotlinx.serialization.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*

/**
 * 
 * @param stage 
 * @param startedAt iso8601
 * @param duration seconds
 * @param gpsPath Google Encoded Polyline format (google.maps.geometry.encoding.decodePath())
 * @param distance meters
 * @param avgSpeed km/h
 * @param avgPower Power in the unit of Watt
 * @param incline Incline in % during this stage
 * @param ascent Ascent in meters during this stage
 * @param heartRatePeak highest recorded heart rate
 * @param heartRateAvg average heart rate among recorded values
 * @param heartRateMin lowest recorded heart rate
 */
@Serializable
data class WorkoutStage (
    @SerialName(value = "stage") @Required val stage: WorkoutStage.Stage,
    /* iso8601 */
    @SerialName(value = "started_at") @Required val startedAt: kotlin.String,
    /* seconds */
    @SerialName(value = "duration") @Required val duration: kotlin.Double,
    /* Google Encoded Polyline format (google.maps.geometry.encoding.decodePath()) */
    @SerialName(value = "gps_path") val gpsPath: kotlin.String? = null,
    /* meters */
    @SerialName(value = "distance") val distance: kotlin.Double? = null,
    /* km/h */
    @SerialName(value = "avg_speed") val avgSpeed: kotlin.Double? = null,
    /* Power in the unit of Watt */
    @SerialName(value = "avg_power") val avgPower: kotlin.Int? = null,
    /* Incline in % during this stage */
    @SerialName(value = "incline") val incline: kotlin.Double? = null,
    /* Ascent in meters during this stage */
    @SerialName(value = "ascent") val ascent: kotlin.Double? = null,
    /* highest recorded heart rate */
    @SerialName(value = "heart_rate_peak") val heartRatePeak: kotlin.Int? = null,
    /* average heart rate among recorded values */
    @SerialName(value = "heart_rate_avg") val heartRateAvg: kotlin.Int? = null,
    /* lowest recorded heart rate */
    @SerialName(value = "heart_rate_min") val heartRateMin: kotlin.Int? = null
) {

    /**
     * 
     * Values: WARM_UP,INTENSIVE,ACTIVE_BREAK,COOL_DOWN,GENERIC
     */
    @Serializable
    enum class Stage(val value: kotlin.String) {
        @SerialName(value = "warm_up") WARM_UP("warm_up"),
        @SerialName(value = "intensive") INTENSIVE("intensive"),
        @SerialName(value = "active_break") ACTIVE_BREAK("active_break"),
        @SerialName(value = "cool_down") COOL_DOWN("cool_down"),
        @SerialName(value = "generic") GENERIC("generic");
    }
}

