/**
* Myworkout API
* Documentation for Myworkout API 2.  Basic concepts are explained in this section.  # Localization The API supports localization for error messages like validation errors. The preferred way to request language is to set proper `Accept-Language` header, but this can be overriden by adding a `lang` query parameter to the request.  - _Example 1_: `Accept-Language: no` - _Example 2_: `en-GB,en-US;q=0.9,en;q=0.8` 
*
* The version of the OpenAPI document: <%= ENV[\"API_VERSION\"] %>
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package com.myworkout.kotlin.api.models

import com.myworkout.kotlin.api.models.DataPermission

import kotlinx.serialization.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*

/**
 * 
 * @param id 
 * @param uuid 
 * @param name Name of organization
 * @param isPremium 
 * @param language 
 * @param inviteMethods Types of invitation methods used by organization
 * @param type 
 * @param requiredPermissions 
 */
@Serializable
data class Organization (
    @SerialName(value = "id") val id: kotlin.Int? = null,
    @SerialName(value = "uuid") val uuid: kotlin.String? = null,
    /* Name of organization */
    @SerialName(value = "name") val name: kotlin.String? = null,
    @SerialName(value = "is_premium") val isPremium: kotlin.Boolean? = null,
    @SerialName(value = "language") val language: kotlin.String? = null,
    /* Types of invitation methods used by organization */
    @SerialName(value = "invite_methods") val inviteMethods: kotlin.collections.List<Organization.InviteMethods>? = null,
    @SerialName(value = "type") val type: kotlin.String? = null,
    @SerialName(value = "required_permissions") val requiredPermissions: kotlin.collections.List<DataPermission>? = null
) {

    /**
     * Types of invitation methods used by organization
     * Values: EMAIL,SMS
     */
    @Serializable
    enum class InviteMethods(val value: kotlin.String) {
        @SerialName(value = "email") EMAIL("email"),
        @SerialName(value = "sms") SMS("sms");
    }
}

